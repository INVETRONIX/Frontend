/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.project.frontend.SYSTEMgemini.interfaz;

import com.project.frontend.SYSTEMproductos.interfaz.VentanaPrincipalAdmin;
import com.project.frontend.SYSTEMgemini.controller.ControllerGemini;
import com.project.frontend.SYSTEMgemini.model.GeminiResponse;
import com.project.frontend.core.BackendException;
import java.io.IOException;
import javax.swing.*;
import java.awt.*;

/**
 *
 * @author sebastian
 */
public class NotificacionesAdmin extends JFrame {

    private ControllerGemini geminiController;
    private JPanel mainPanel;
    private JPanel leftPanel;
    private JPanel rightPanel;
    private JButton btnPredecir;
    private JButton btnVolver;
    private JTextArea txtAnalisis;
    private JScrollPane scrollPane;

    /**
     * Creates new form NOtificacionesAdmin
     */
    public NotificacionesAdmin() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.geminiController = new ControllerGemini();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Análisis Predictivo");
        setSize(1000, 650);
        setResizable(false);
        setLocationRelativeTo(null);

        mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(new Color(245, 245, 245));

        // Panel izquierdo (logo y título)
        leftPanel = new JPanel();
        leftPanel.setBackground(new Color(0, 122, 255));
        leftPanel.setPreferredSize(new Dimension(450, 650));
        leftPanel.setLayout(new BorderLayout());
        leftPanel.setBorder(BorderFactory.createEmptyBorder(40, 30, 40, 30));

        JLabel lblLogo = new JLabel("Invetronix");
        lblLogo.setFont(new Font("Segoe UI", Font.BOLD, 36));
        lblLogo.setForeground(Color.WHITE);
        lblLogo.setHorizontalAlignment(SwingConstants.CENTER);
        leftPanel.add(lblLogo, BorderLayout.CENTER);

        // Panel derecho (contenido)
        rightPanel = new JPanel();
        rightPanel.setBackground(new Color(245, 245, 245));
        rightPanel.setLayout(new BoxLayout(rightPanel, BoxLayout.Y_AXIS));
        rightPanel.setBorder(BorderFactory.createEmptyBorder(40, 40, 40, 40));

        // Título
        JLabel lblTitulo = new JLabel("Análisis Predictivo");
        lblTitulo.setFont(new Font("Segoe UI", Font.BOLD, 36));
        lblTitulo.setForeground(new Color(33, 33, 33));
        lblTitulo.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Subtítulo
        JLabel lblSubtitulo = new JLabel("Obtén predicciones sobre tus ventas");
        lblSubtitulo.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        lblSubtitulo.setForeground(new Color(100, 100, 100));
        lblSubtitulo.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Área de texto para el análisis
        txtAnalisis = new JTextArea();
        txtAnalisis.setEditable(false);
        txtAnalisis.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        txtAnalisis.setLineWrap(true);
        txtAnalisis.setWrapStyleWord(true);
        txtAnalisis.setBackground(Color.WHITE);
        txtAnalisis.setForeground(new Color(33, 33, 33));
        txtAnalisis.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(15, 15, 15, 15)
        ));

        scrollPane = new JScrollPane(txtAnalisis);
        scrollPane.setPreferredSize(new Dimension(400, 300));
        scrollPane.setMaximumSize(new Dimension(400, 300));
        scrollPane.setBorder(BorderFactory.createEmptyBorder());

        // Panel de botones
        JPanel buttonsPanel = new JPanel();
        buttonsPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 20, 0));
        buttonsPanel.setBackground(new Color(245, 245, 245));

        btnPredecir = new JButton("Obtener Análisis");
        btnPredecir.setPreferredSize(new Dimension(180, 45));
        btnPredecir.setBackground(new Color(41, 128, 185));
        btnPredecir.setForeground(Color.BLUE);
        btnPredecir.setFont(new Font("Segoe UI", Font.BOLD, 16));
        btnPredecir.setFocusPainted(false);
        btnPredecir.setBorderPainted(false);
        btnPredecir.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnPredecir.addActionListener(e -> btnPredecirActionPerformed(null));

        btnVolver = new JButton("Volver");
        btnVolver.setPreferredSize(new Dimension(120, 45));
        btnVolver.setBackground(new Color(220, 53, 69));
        btnVolver.setForeground(Color.RED);
        btnVolver.setFont(new Font("Segoe UI", Font.BOLD, 16));
        btnVolver.setFocusPainted(false);
        btnVolver.setBorderPainted(false);
        btnVolver.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnVolver.addActionListener(e -> btnVolverActionPerformed(null));

        buttonsPanel.add(btnPredecir);
        buttonsPanel.add(btnVolver);

        // Agregar componentes al panel derecho
        rightPanel.add(Box.createVerticalGlue());
        rightPanel.add(lblTitulo);
        rightPanel.add(Box.createVerticalStrut(15));
        rightPanel.add(lblSubtitulo);
        rightPanel.add(Box.createVerticalStrut(40));
        rightPanel.add(scrollPane);
        rightPanel.add(Box.createVerticalStrut(40));
        rightPanel.add(buttonsPanel);
        rightPanel.add(Box.createVerticalGlue());

        // Agregar paneles al panel principal
        mainPanel.add(leftPanel, BorderLayout.WEST);
        mainPanel.add(rightPanel, BorderLayout.CENTER);

        // Agregar panel principal al frame
        add(mainPanel);
    }

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {
        VentanaPrincipalAdmin ventanaPrincipal = new VentanaPrincipalAdmin();
        ventanaPrincipal.setVisible(true);
        this.dispose();
    }

    private void btnPredecirActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // Mostrar indicador de carga
            btnPredecir.setEnabled(false);
            btnPredecir.setText("Analizando...");
            txtAnalisis.setText("Obteniendo análisis...\nPor favor espere...");

            // Llamar al controlador para obtener el análisis de ventas
            GeminiResponse response = geminiController.analizarVentas();

            // Mostrar el resultado en el área de texto
            if (response != null && response.getAnalisis() != null) {
                StringBuilder mensaje = new StringBuilder();
                mensaje.append("ANÁLISIS DE VENTAS\n");
                mensaje.append("==================\n\n");
                mensaje.append(response.getAnalisis());

                if (response.getPrediccion() != null && !response.getPrediccion().isEmpty()) {
                    mensaje.append("\n\nPREDICCIONES FUTURAS\n");
                    mensaje.append("==================\n\n");
                    mensaje.append(response.getPrediccion());
                }

                if (response.getRecomendaciones() != null && !response.getRecomendaciones().isEmpty()) {
                    mensaje.append("\n\nRECOMENDACIONES\n");
                    mensaje.append("==================\n\n");
                    mensaje.append(response.getRecomendaciones());
                }

                txtAnalisis.setText(mensaje.toString());
            } else {
                txtAnalisis.setText("No se pudo obtener el análisis de ventas.");
            }

        } catch (IOException e) {
            txtAnalisis.setText("Error de conexión al servidor: " + e.getMessage());
        } catch (BackendException e) {
            txtAnalisis.setText("Error del backend: " + e.getMessage());
        } catch (Exception e) {
            txtAnalisis.setText("Ocurrió un error inesperado: " + e.getMessage());
        } finally {
            // Restaurar el botón
            btnPredecir.setEnabled(true);
            btnPredecir.setText("Obtener Análisis");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }

        EventQueue.invokeLater(() -> {
            new NotificacionesAdmin().setVisible(true);
        });
    }
}
