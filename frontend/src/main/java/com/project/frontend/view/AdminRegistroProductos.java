/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.project.frontend.view;

import com.project.frontend.productsSystem.controllers.ControllerProduct;
import com.project.frontend.productsSystem.models.Product;
import com.project.frontend.productsSystem.view.AdminFormProductos;
import java.io.IOException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sebastian
 */
public class AdminRegistroProductos extends javax.swing.JFrame {
    private ControllerProduct controllerProduct;

    /**
     * Creates new form ListaProductosAdministrador
     */
    public AdminRegistroProductos() {
        initComponents();
        setLocationRelativeTo(this);
        setResizable(false);
        pack();
        this.controllerProduct= new ControllerProduct();
        
        try {
            
            llenarTabla();
        } catch (IOException ex) {
              JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + ex.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void llenarTabla(List<Product> lista) throws IOException {
        
        if(lista != null && !lista.isEmpty()){
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(new Object[]{"ID","Nombre", "Descripcion", "Precio", "Categoria", "Stock", "Proveedor"});
            for (int i = 0; i < lista.size(); i++) {
                model.addRow(new Object[]{
                   lista.get(i).getId(),
                   lista.get(i).getName(),
                   lista.get(i).getDescription(),
                   lista.get(i).getPrice(),
                   lista.get(i).getCategory(),
                   lista.get(i).getStockQuantity(),
                   lista.get(i).GetSupplier()
                });
            }

            tableProducts.setModel(model);
        }

    }
    
    private void llenarTabla() throws IOException {
       List<Product> lista = (List<Product>) controllerProduct.operation("GET_ALL", null);
       if(lista != null && !lista.isEmpty()){
            DefaultTableModel model = new DefaultTableModel();
            model.setColumnIdentifiers(new Object[]{"ID","Nombre", "Descripcion", "Precio", "Categoria", "Stock", "Proveedor"});
            for (int i = 0; i < lista.size(); i++) {
                model.addRow(new Object[]{
                   lista.get(i).getId(),
                   lista.get(i).getName(),
                   lista.get(i).getDescription(),
                   lista.get(i).getPrice(),
                   lista.get(i).getCategory(),
                   lista.get(i).getStockQuantity(),
                   lista.get(i).GetSupplier()
                });
            }

            tableProducts.setModel(model);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAgregarProducto = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        DeleteProduct = new javax.swing.JButton();
        UpdateProduct = new javax.swing.JButton();
        txtEntrada = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        FindByIdProduct = new javax.swing.JButton();
        Get = new javax.swing.JTextField();
        txtCategory = new javax.swing.JTextField();
        txtNameSupplier = new javax.swing.JTextField();
        txtNameProduct = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAgregarProducto.setText("Agregar producto");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Liberation Serif", 0, 48)); // NOI18N
        jLabel6.setText("Productos");

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Descripcion", "Precio", "Categoria", "Stock", "Proveedor"
            }
        ));
        jScrollPane1.setViewportView(tableProducts);

        DeleteProduct.setText("Eliminar");
        DeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProductActionPerformed(evt);
            }
        });

        UpdateProduct.setText("Modificar");
        UpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateProductActionPerformed(evt);
            }
        });

        jLabel5.setText("ID PRODUCTO");

        FindByIdProduct.setText("Buscar");
        FindByIdProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindByIdProductActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre de producto");

        jLabel2.setText("Nombre de proveedor");

        jLabel3.setText("Categoria");

        jLabel4.setText("ID");

        txtRefresh.setText("Refrescar");
        txtRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)
                        .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(FindByIdProduct)
                                .addGap(31, 31, 31))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(UpdateProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(DeleteProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtRefresh))
                                .addGap(194, 194, 194)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Get)
                            .addComponent(txtEntrada)
                            .addComponent(txtCategory)
                            .addComponent(txtNameSupplier)
                            .addComponent(txtNameProduct)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregarProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(txtNameSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(txtCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtRefresh)
                        .addGap(18, 18, 18)
                        .addComponent(FindByIdProduct))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Get, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteProduct)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UpdateProduct)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        AdminFormProductos cambio= new AdminFormProductos("SAVE", null);
        cambio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        AdminPrincipal cambio = new AdminPrincipal();
        cambio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void limpiarCampos(){
        txtEntrada.setText("");
    }

    private void DeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProductActionPerformed
        try{

            if(txtEntrada.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, 
               "Debes de ingresar el ID del producto que será eliminado", 
               "Error", 
               JOptionPane.ERROR_MESSAGE);
               return;
           }

            String id = txtEntrada.getText();

            Object[] countain = new Object[1];
            countain[0] = id;
            
            controllerProduct.operation("DELETE", countain);
            
            limpiarCampos();
            llenarTabla();
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DeleteProductActionPerformed

    private void UpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateProductActionPerformed
        try{
            
            if(txtEntrada.getText().isEmpty()){
                 JOptionPane.showMessageDialog(this, 
                "Debes de ingresar el ID del producto que será modificado", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            String id = txtEntrada.getText();

            Object[] countain = new Object[1];
            countain[0] = id;
            
            Product updated = (Product) controllerProduct.operation("GET_BY_ID", countain);
            if(updated!=null){
                limpiarCampos();
                AdminFormProductos cambio = new AdminFormProductos("UPDATE", updated);
                cambio.setVisible(true);
                llenarTabla();
            }
            
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_UpdateProductActionPerformed

    private void FindByIdProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindByIdProductActionPerformed
         try{
            
            if(!txtNameProduct.getText().isBlank() && !txtNameProduct.getText().isEmpty() || !txtNameSupplier.getText().isBlank() && !txtNameSupplier.getText().isEmpty()){
                 Object[] container = new Object[3];
                container[0]=txtNameProduct.getText();
                container[1]=txtCategory.getText();
                container[2]=txtNameSupplier.getText();
                List<Product> products= (List<Product>) controllerProduct.operation("GET_BY_FILTERS", container);
                
                if(products!=null && !products.isEmpty()){
                    llenarTabla(products);
                }
            }else if(Get.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, 
                "Debes de ingresar el ID del producto que quieres buscar", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
                return;
            }else{
            
                String id = Get.getText();

                Object[] countain = new Object[1];
                countain[0] = id;

                Product product = (Product) controllerProduct.operation("GET_BY_ID", countain);

                if(product!=null){
                    JOptionPane.showMessageDialog(
                        null,
                        "📦 Producto encontrado:\n\n" +
                        "📝 Nombre:        " + product.getName() + "\n" +
                        "📄 Descripción:   " + product.getDescription() + "\n" +
                        "🏷️ Categoría:     " + product.getCategory() + "\n" +
                        "🚚 Proveedor:     " + product.getSupplier() + "\n" +
                        "💰 Precio:        $" + product.getPrice() + "\n" +
                        "📦 En stock:      " + product.getStockQuantity() + " unidades",
                        "✅ Busquedad Exitosa",
                        JOptionPane.INFORMATION_MESSAGE
                    );
                }
            }
            
        }catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_FindByIdProductActionPerformed

    private void txtRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRefreshActionPerformed
        try {
            llenarTabla();
        } catch (IOException ex) {
              JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + ex.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_txtRefreshActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteProduct;
    private javax.swing.JButton FindByIdProduct;
    private javax.swing.JTextField Get;
    private javax.swing.JButton UpdateProduct;
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableProducts;
    private javax.swing.JTextField txtCategory;
    private javax.swing.JTextField txtEntrada;
    private javax.swing.JTextField txtNameProduct;
    private javax.swing.JTextField txtNameSupplier;
    private javax.swing.JButton txtRefresh;
    // End of variables declaration//GEN-END:variables


}
