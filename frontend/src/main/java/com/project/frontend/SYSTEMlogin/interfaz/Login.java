/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.project.frontend.SYSTEMlogin.interfaz;

import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;
import com.project.frontend.SYSTEMcompras.interfaz.VentanaPrincipalCliente;
import com.project.frontend.SYSTEMlogin.controller.ControllerLogin;
import com.project.frontend.SYSTEMlogin.data.TokenManager;
import com.project.frontend.SYSTEMlogin.model.LoginRequest;
import com.project.frontend.SYSTEMproductos.interfaz.VentanaPrincipalAdmin;
import com.project.frontend.SYSTEMregistro.interfaz.RegistroUsuario;
import com.project.frontend.core.BackendException;

/**
 *
 * @author sebastian
 */
public class Login extends JFrame {
    private ControllerLogin controlador;
    private JPanel mainPanel;
    private JPanel leftPanel;
    private JPanel rightPanel;
    private JTextField txtEmail;
    private JPasswordField txtContraseña;
    private JButton btnIniciarSesion;
    private JButton btnRegistrarse;
    private Color darkBackground = new Color(18, 18, 18);
    private Color accentColor = new Color(0, 122, 255);
    private Color textColor = new Color(255, 255, 255);
    private Color inputBackground = new Color(30, 30, 30);

    /**
     * Creates new form login
     */
    public Login() {
        initComponents();
        this.setLocationRelativeTo(null);
        controlador = new ControllerLogin();
        customizeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iniciar Sesión");
        setSize(1000, 600);
        setResizable(false);
        setLocationRelativeTo(null);

        mainPanel = new JPanel(new BorderLayout());
        mainPanel.setBackground(new Color(245, 245, 245));

        // Panel izquierdo (imagen o logo)
        leftPanel = new JPanel();
        leftPanel.setBackground(new Color(0, 122, 255));
        leftPanel.setPreferredSize(new Dimension(450, 600));
        leftPanel.setLayout(new BorderLayout());

        // Panel derecho (formulario)
        rightPanel = new JPanel();
        rightPanel.setBackground(new Color(245, 245, 245));
        rightPanel.setLayout(new BoxLayout(rightPanel, BoxLayout.Y_AXIS));
        rightPanel.setBorder(BorderFactory.createEmptyBorder(60, 60, 60, 60));

        // Título
        JLabel lblTitulo = new JLabel("Bienvenido");
        lblTitulo.setFont(new Font("Segoe UI", Font.BOLD, 36));
        lblTitulo.setForeground(new Color(33, 33, 33));
        lblTitulo.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Subtítulo
        JLabel lblSubtitulo = new JLabel("Ingresa tus credenciales para continuar");
        lblSubtitulo.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        lblSubtitulo.setForeground(new Color(100, 100, 100));
        lblSubtitulo.setAlignmentX(Component.CENTER_ALIGNMENT);

        // Campo Email
        JLabel lblEmail = new JLabel("Email");
        lblEmail.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        lblEmail.setForeground(new Color(33, 33, 33));
        lblEmail.setAlignmentX(Component.LEFT_ALIGNMENT);

        txtEmail = new JTextField();
        txtEmail.setMaximumSize(new Dimension(400, 45));
        txtEmail.setBackground(Color.WHITE);
        txtEmail.setForeground(new Color(33, 33, 33));
        txtEmail.setCaretColor(new Color(0, 122, 255));
        txtEmail.setSelectedTextColor(Color.WHITE);
        txtEmail.setSelectionColor(new Color(0, 122, 255));
        txtEmail.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(5, 15, 5, 15)
        ));
        txtEmail.setFont(new Font("Segoe UI", Font.PLAIN, 14));

        // Campo Contraseña
        JLabel lblContraseña = new JLabel("Contraseña");
        lblContraseña.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        lblContraseña.setForeground(new Color(33, 33, 33));
        lblContraseña.setAlignmentX(Component.LEFT_ALIGNMENT);

        txtContraseña = new JPasswordField();
        txtContraseña.setMaximumSize(new Dimension(400, 45));
        txtContraseña.setBackground(Color.WHITE);
        txtContraseña.setForeground(new Color(33, 33, 33));
        txtContraseña.setCaretColor(new Color(0, 122, 255));
        txtContraseña.setSelectedTextColor(Color.WHITE);
        txtContraseña.setSelectionColor(new Color(0, 122, 255));
        txtContraseña.setBorder(BorderFactory.createCompoundBorder(
            BorderFactory.createLineBorder(new Color(200, 200, 200)),
            BorderFactory.createEmptyBorder(5, 15, 5, 15)
        ));
        txtContraseña.setFont(new Font("Segoe UI", Font.PLAIN, 14));

        // Botón Iniciar Sesión
        btnIniciarSesion = new JButton("Iniciar Sesión");
        btnIniciarSesion.setMaximumSize(new Dimension(400, 50));
        btnIniciarSesion.setBackground(new Color(41, 128, 185));
        btnIniciarSesion.setForeground(Color.BLUE);
        btnIniciarSesion.setFont(new Font("Segoe UI", Font.BOLD, 16));
        btnIniciarSesion.setFocusPainted(false);
        btnIniciarSesion.setBorderPainted(false);
        btnIniciarSesion.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnIniciarSesion.setAlignmentX(Component.CENTER_ALIGNMENT);
        btnIniciarSesion.setEnabled(true);

        // Panel de registro
        JPanel registroPanel = new JPanel();
        registroPanel.setBackground(new Color(245, 245, 245));
        registroPanel.setLayout(new FlowLayout(FlowLayout.CENTER));
        
        JLabel lblNoCuenta = new JLabel("¿No tienes una cuenta?");
        lblNoCuenta.setFont(new Font("Segoe UI", Font.PLAIN, 14));
        lblNoCuenta.setForeground(new Color(100, 100, 100));
        
        btnRegistrarse = new JButton("Regístrate");
        btnRegistrarse.setForeground(new Color(0, 122, 255));
        btnRegistrarse.setBackground(new Color(245, 245, 245));
        btnRegistrarse.setBorderPainted(false);
        btnRegistrarse.setFocusPainted(false);
        btnRegistrarse.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnRegistrarse.setCursor(new Cursor(Cursor.HAND_CURSOR));

        registroPanel.add(lblNoCuenta);
        registroPanel.add(btnRegistrarse);

        // Agregar componentes al panel derecho
        rightPanel.add(Box.createVerticalGlue());
        rightPanel.add(lblTitulo);
        rightPanel.add(Box.createVerticalStrut(15));
        rightPanel.add(lblSubtitulo);
        rightPanel.add(Box.createVerticalStrut(50));
        rightPanel.add(lblEmail);
        rightPanel.add(Box.createVerticalStrut(8));
        rightPanel.add(txtEmail);
        rightPanel.add(Box.createVerticalStrut(25));
        rightPanel.add(lblContraseña);
        rightPanel.add(Box.createVerticalStrut(8));
        rightPanel.add(txtContraseña);
        rightPanel.add(Box.createVerticalStrut(40));
        rightPanel.add(btnIniciarSesion);
        rightPanel.add(Box.createVerticalStrut(25));
        rightPanel.add(registroPanel);
        rightPanel.add(Box.createVerticalGlue());

        // Agregar paneles al panel principal
        mainPanel.add(leftPanel, BorderLayout.WEST);
        mainPanel.add(rightPanel, BorderLayout.CENTER);

        // Agregar panel principal al frame
        add(mainPanel);

        // Agregar listeners
        btnIniciarSesion.addActionListener(e -> btnIniciarSesionActionPerformed(e));
        btnRegistrarse.addActionListener(e -> btnRegistrarseActionPerformed(e));

        // Agregar efectos hover
        addHoverEffect(btnIniciarSesion, new Color(41, 128, 185), new Color(52, 152, 219));
        addHoverEffect(btnRegistrarse, new Color(245, 245, 245), new Color(235, 235, 235));
    }

    private void customizeComponents() {
        // Configuración global para campos de texto
        UIManager.put("TextField.background", Color.WHITE);
        UIManager.put("TextField.foreground", new Color(33, 33, 33));
        UIManager.put("TextField.caretForeground", new Color(0, 122, 255));
        UIManager.put("TextField.selectionBackground", new Color(0, 122, 255));
        UIManager.put("TextField.selectionForeground", Color.WHITE);
        
        // Configuración global para campos de contraseña
        UIManager.put("PasswordField.background", Color.WHITE);
        UIManager.put("PasswordField.foreground", new Color(33, 33, 33));
        UIManager.put("PasswordField.caretForeground", new Color(0, 122, 255));
        UIManager.put("PasswordField.selectionBackground", new Color(0, 122, 255));
        UIManager.put("PasswordField.selectionForeground", Color.WHITE);
        
        // Configuración del cursor
        UIManager.put("TextField.caretBlinkRate", 500);
        UIManager.put("PasswordField.caretBlinkRate", 500);
        
        // Forzar la actualización de los componentes
        SwingUtilities.updateComponentTreeUI(this);
    }

    private void addHoverEffect(JButton button, Color normalColor, Color hoverColor) {
        button.addMouseListener(new MouseAdapter() {
            public void mouseEntered(MouseEvent e) {
                button.setBackground(hoverColor);
            }
            public void mouseExited(MouseEvent e) {
                button.setBackground(normalColor);
            }
        });
    }

    private void btnRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {
        RegistroUsuario cambio = new RegistroUsuario();
        cambio.setVisible(true);
        this.dispose();
    }

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            String email = txtEmail.getText().trim();
            String contraseña = new String(txtContraseña.getPassword()).trim();
            
            if (email.isEmpty() || contraseña.isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "Por favor complete todos los campos", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            LoginRequest loginRequest = new LoginRequest();
            loginRequest.setCorreo(email);
            loginRequest.setContrasena(contraseña);
            
            controlador.login(loginRequest);
            
            if (TokenManager.getInstance().isLoggedIn()) {
                String userRole = TokenManager.getInstance().getUserRole();
                
                if ("ADMIN".equals(userRole)) {
                    VentanaPrincipalAdmin cambio = new VentanaPrincipalAdmin();
                    cambio.setVisible(true);
                    this.dispose();
                } else if ("CLIENTE".equals(userRole)) {
                    VentanaPrincipalCliente cambio = new VentanaPrincipalCliente();
                    cambio.setVisible(true);
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(this, 
                        "Rol de usuario no reconocido: " + userRole, 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Error: No se pudo obtener el token de autenticación", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        } catch (BackendException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Error inesperado: " + e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }

        EventQueue.invokeLater(() -> {
            new Login().setVisible(true);
        });
    }
}
